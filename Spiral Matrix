"""Given an m x n matrix, return all elements of the matrix in spiral order.

Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]
"""

## 

class Solution(object):
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        :count_time:[int] use for check have we put all the elements in the list
        :front:[boolean] start from begin?
        :down:[boolean] from first list?
        """
        a = matrix 
        result = []
        row = len(a)
        column = len(a[0])
        count_time = row * column
        front = True
        down = True
        stay = 0
        while stay == 0:
            if len(result) == count_time:
                stay = 1
            else:
                if front == True and down == True:
                    for i in a[0]:
                        result.append(i)
                    a.pop(0)
                    front = False
                elif front == False and down == True:
                    for k in a:
                        result.append(k[-1])
                        k.pop()
                    down = False
                elif front == False and down == False:
                    for d in a[-1][::-1]:
                        result.append(d)
                    a.pop()
                    front = True
                else:
                    for x in a[::-1]:
                        result.append(x[0])
                        x.pop(0)
                    down = True
        return result
